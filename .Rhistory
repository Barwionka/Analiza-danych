wykres1 <- ggplot(suma1, aes(x = suma)) +
geom_histogram(fill = "green", bins = 50) +
labs(title = "Suma rozkładów wykładniczych", x = "Wartości", y = "Liczebność") +
theme_minimal()
# Histogram rozkładu Gamma
wykres <- ggplot(probka11, aes(x = probka1)) +
geom_histogram(fill = "hotpink", bins = 50) +
labs(title = "Rozkład Gamma", x = "Wartości", y = "Liczebność") +
theme_minimal()
# Łączenie wykresów
ggarrange(wykres1, wykres, ncol = 2, nrow = 1)
# Ładowanie bibliotek
library(ggplot2)
library(dplyr)
library(ggpubr)
# Parametry
lambda <- 10  # Parametr lambda
k <- 50       # Liczba zmiennych wykładniczych
n <- 10000    # Liczba obserwacji
liczba_prob <- 4  # Liczba prób
# Funkcja do generowania wykresów dla jednej próby
generuj_wykresy <- function(seed) {
set.seed(seed)
# Suma zmiennych wykładniczych
suma <- numeric(n)
for (i in 1:k) {
suma <- suma + rexp(n, rate = lambda)
}
suma1 <- as_tibble(suma)
# Rozkład Gamma
probka <- rgamma(n, shape = k, rate = lambda)
probka1 <- as_tibble(probka)
# Histogram sumy zmiennych wykładniczych
wykres1 <- ggplot(suma1, aes(x = suma)) +
geom_histogram(fill = "green", bins = 50) +
labs(title = paste0("Suma zmiennych wykładniczych (Próba ", seed, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
# Histogram rozkładu Gamma
wykres2 <- ggplot(probka1, aes(x = probka)) +
geom_histogram(fill = "hotpink", bins = 50) +
labs(title = paste0("Rozkład Gamma (Próba ", seed, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
return(list(wykres1, wykres2))
}
# Generowanie wykresów dla wielu prób
set_seeds <- c(314, 159, 265, 358)  # Ziarna dla każdej próby
wszystkie_wykresy <- lapply(set_seeds, generuj_wykresy)
# Łączenie wykresów w jednej planszy
ggarrange(plotlist = unlist(wszystkie_wykresy, recursive = FALSE), ncol = 2, nrow = 4)
# Ładowanie bibliotek
library(ggplot2)
library(dplyr)
library(ggpubr)
# Parametry
lambda <- 10  # Parametr lambda
k <- 50       # Liczba zmiennych wykładniczych
n <- 10000    # Liczba obserwacji
liczba_prob <- 4  # Liczba prób
# Iteracja dla każdej próby
for (i in 1:liczba_prob) {
set.seed(314 + i)  # Ustawienie różnego ziarna dla każdej próby
# Suma zmiennych wykładniczych
suma <- numeric(n)
for (j in 1:k) {
suma <- suma + rexp(n, rate = lambda)
}
suma1 <- as_tibble(suma)
# Rozkład Gamma
probka <- rgamma(n, shape = k, rate = lambda)
probka1 <- as_tibble(probka)
# Histogram sumy zmiennych wykładniczych
wykres1 <- ggplot(suma1, aes(x = suma)) +
geom_histogram(fill = "green", bins = 50) +
labs(title = paste0("Suma zmiennych wykładniczych (Próba ", i, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
# Histogram rozkładu Gamma
wykres2 <- ggplot(probka1, aes(x = probka)) +
geom_histogram(fill = "hotpink", bins = 50) +
labs(title = paste0("Rozkład Gamma (Próba ", i, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
# Wyświetlanie dwóch wykresów w jednym układzie
print(ggarrange(wykres1, wykres2, ncol = 2, nrow = 1))
}
lambda <- 10
k <- 50
n <- 10000
liczba_prob <- 4
for (i in 1:liczba_prob) {
set.seed(314 + i)
suma <- numeric(n)
for (j in 1:k) {
suma <- suma + rexp(n, rate = lambda)
}
suma1 <- as_tibble(suma)
probka <- rgamma(n, shape = k, rate = lambda)
probka1 <- as_tibble(probka)
wykres1 <- ggplot(suma1, aes(x = suma)) +
geom_histogram(fill = "green", bins = 50) +
labs(title = paste0("Suma zmiennych wykładniczych (Próba ", i, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
wykres2 <- ggplot(probka1, aes(x = probka)) +
geom_histogram(fill = "hotpink", bins = 50) +
labs(title = paste0("Rozkład Gamma (Próba ", i, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
print(ggarrange(wykres1, wykres2, ncol = 2, nrow = 1))
}
lambda
k
c = 4
gamma_samples <- rgamma(n = n, shape = k, rate = lambda)
scaled_gamma_samples <- rgamma(n = n, shape = k, rate = lambda / c)
scaled_gamma_samples2 <- c * gamma_samples
compp_tibble <- tibble(
scaled_gamma = scaled_gamma_samples,
scaled_gamma2 = scaled_gamma_samples2
)
compp_tibble_piv <- compp_tibble %>% pivot_longer(1:2, names_to = "dist", values_to = "val")
generuj_wykresy <- function(seed) {
set.seed(seed)
gamma_samples <- rgamma(n = n, shape = k, rate = lambda)
scaled_gamma_samples <- rgamma(n = n, shape = k, rate = lambda / c)
scaled_gamma_samples2 <- c * gamma_samples
compp_tibble <- tibble(
scaled_gamma = scaled_gamma_samples,
scaled_gamma2 = scaled_gamma_samples2
)
compp_tibble_piv <- compp_tibble %>% pivot_longer(1:2, names_to = "dist", values_to = "val")
wykres <- ggplot(compp_tibble_piv, aes(x = val, fill = dist)) +
geom_histogram(bins = 20, alpha = 0.6) +
facet_grid(~dist, scales = "free") +
labs(title = paste0("Porównanie skalowania rozkładu Gamma (Próba ", seed, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
return(wykres)
}
set_seeds <- c(314, 159, 265, 358)
wszystkie_wykresy <- lapply(set_seeds, generuj_wykresy)
for (wykres in wszystkie_wykresy) {
print(wykres)
}
library(tidyverse)
library(ggpubr)
set.seed(3141592)
set.seed(3141592)
proba1 <- rgamma(1000, shape=5, rate=0.5)
proba2 <- rgamma(1000, shape=2, rate=10)
proba3 <- rgamma(1000, shape=4, rate=3)
srednia_probki1 <- mean(proba1)
srednia_probki2 <- mean(proba2)
srednia_probki3 <- mean(proba3)
wariancja_probki1 <- var(proba1)
wariancja_probki2 <- var(proba2)
wariancja_probki3 <- var(proba3)
#porównanie wariancji i średnich z próbki z teoretycznymi
teoretyczna_srednia1 <- 5 / 0.5
teoretyczna_srednia2 <- 2 / 10
teoretyczna_srednia3 <- 4 / 3
teoretyczna_wariancja1 <- 5 / (0.5^2)
teoretyczna_wariancja2 <- 2 / (10^2)
teoretyczna_wariancja3 <- 4 / (3^2)
porownanie_srednich <- tibble(
Parametr = c("Próbka 1", "Próbka 2", "Próbka 3"),
Teoretyczna_srednia = c(teoretyczna_srednia1, teoretyczna_srednia2, teoretyczna_srednia3),
Otrzymana_srednia = c(srednia_probki1, srednia_probki2, srednia_probki3))
porownanie_wariancji <- tibble(
Parametr = c("Próbka 1", "Próbka 2", "Próbka 3"),
Teoretyczna_wariancja = c(teoretyczna_wariancja1, teoretyczna_wariancja2, teoretyczna_wariancja3),
Otrzymana_wariancja = c(wariancja_probki1, wariancja_probki2, wariancja_probki3))
porownanie_srednich
porownanie_wariancji
gamma_proba1 <- as_tibble(proba1)
gamma_proba2 <- as_tibble(proba2)
gamma_proba3 <- as_tibble(proba3)
hist1 <- ggplot(data=gamma_proba1, aes(x=value))+geom_histogram() + ggtitle('Histogram próby z rokładu Gamma z parametrami lambda=0.5, k=5') + xlab('Wartość zmiennej X') + ylab('Częstotliwość')
hist1
hist2 <- ggplot(data=gamma_proba2, aes(x=value))+geom_histogram() + ggtitle('Histogram próby z rokładu Gamma z parametrami lambda=10, k=2') + xlab('Wartość zmiennej X') + ylab('Częstotliwość')
hist2
hist3 <- ggplot(data=gamma_proba3, aes(x=value))+geom_histogram() + ggtitle('Histogram próby z rokładu Gamma z parametrami lambda=3, k=4') + xlab('Wartość zmiennej X') + ylab('Częstotliwość')
hist3
gammas <- tibble(proba1,
proba2,
proba3)
gamma_pivot <- gammas %>%
pivot_longer(1:3, names_to = "distribution", values_to = "value")
ggplot(data = gamma_pivot, aes(x=value)) + geom_histogram(bins = 15, fill = "lightblue") +
facet_wrap(~distribution, scales = "free") +
theme(panel.background = element_blank())
#dystrybuanty
probaa <- seq(0, 11, length.out = 100)
probab <- seq(0, 11, length.out = 100)
probac <- seq(0, 11, length.out = 100)
gamma_cdf1 <- tibble(probaa, cdf = pgamma(probaa, shape = 5))
gamma_cdf2 <- tibble(probab, cdf = pgamma(probab, shape = 2))
gamma_cdf3 <- tibble(probac, cdf = pgamma(probac, shape = 4))
ggplot() +
geom_line(data = gamma_cdf1, aes(x = probaa, y = cdf, color = "Shape = 5")) +
geom_line(data = gamma_cdf2, aes(x = probab, y = cdf, color = "Shape = 2")) +
geom_line(data = gamma_cdf3, aes(x = probac, y = cdf, color = "Shape = 4")) +
labs(x = "Wartość próbki", y = "Dystrybuanta", title = "Wykresy dystrybuant", color = "Parametr kształtu") +
scale_color_manual(values = c("Shape = 5" = "hotpink",
"Shape = 2" = "blue",
"Shape = 4" = "green")) +
xlim(0, 11) +
ylim(0, 1)
proba11<-as_tibble(proba1)
proba22<-as_tibble(proba2)
proba33<-as_tibble(proba3)
wykres1 <- ggplot(data=proba11, aes(x=proba1)) + geom_boxplot()+labs(x="próba 1")
wykres2 <- ggplot(data=proba22, aes(x=proba2)) + geom_boxplot()+labs(x="próba 2")
wykres3 <- ggplot(data=proba33, aes(x=proba3)) + geom_boxplot()+labs(x="próba 3")
ggarrange(wykres1, wykres2, wykres3, ncol=1,nrow=3)
set.seed(3141529)
lambda <- 1
comp_tibble <- tibble(rozklad_wykladniczy = rexp(n=3000, rate=lambda),
rozklad_gamma = rgamma(n=3000, shape=1, rate=lambda))
comp_tibble_piv <- comp_tibble %>% pivot_longer(1:2, names_to = "dist", values_to = "val")
ggplot(comp_tibble_piv, aes(x=val)) + geom_histogram(bins = 10, fill = "lightpink") +
facet_grid(~dist, scales = "free") +
theme(panel.background = element_blank())
lambda <- 10
k <- 50
n <- 10000
liczba_prob <- 4
for (i in 1:liczba_prob) {
set.seed(314 + i)
suma <- numeric(n)
for (j in 1:k) {
suma <- suma + rexp(n, rate = lambda)
}
suma1 <- as_tibble(suma)
probka <- rgamma(n, shape = k, rate = lambda)
probka1 <- as_tibble(probka)
wykres1 <- ggplot(suma1, aes(x = suma)) +
geom_histogram(fill = "green", bins = 50) +
labs(title = paste0("Suma zmiennych wykładniczych (Próba ", i, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
wykres2 <- ggplot(probka1, aes(x = probka)) +
geom_histogram(fill = "hotpink", bins = 50) +
labs(title = paste0("Rozkład Gamma (Próba ", i, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
print(ggarrange(wykres1, wykres2, ncol = 2, nrow = 1))
}
lambda
k
c = 4
gamma_samples <- rgamma(n = n, shape = k, rate = lambda)
scaled_gamma_samples <- rgamma(n = n, shape = k, rate = lambda / c)
scaled_gamma_samples2 <- c * gamma_samples
compp_tibble <- tibble(
scaled_gamma = scaled_gamma_samples,
scaled_gamma2 = scaled_gamma_samples2
)
compp_tibble_piv <- compp_tibble %>% pivot_longer(1:2, names_to = "dist", values_to = "val")
generuj_wykresy <- function(seed) {
set.seed(seed)
gamma_samples <- rgamma(n = n, shape = k, rate = lambda)
scaled_gamma_samples <- rgamma(n = n, shape = k, rate = lambda / c)
scaled_gamma_samples2 <- c * gamma_samples
compp_tibble <- tibble(
scaled_gamma = scaled_gamma_samples,
scaled_gamma2 = scaled_gamma_samples2
)
compp_tibble_piv <- compp_tibble %>% pivot_longer(1:2, names_to = "dist", values_to = "val")
wykres <- ggplot(compp_tibble_piv, aes(x = val, fill = dist)) +
geom_histogram(bins = 20, alpha = 0.6) +
facet_grid(~dist, scales = "free") +
labs(title = paste0("Porównanie skalowania rozkładu Gamma (Próba ", seed, ")"),
x = "Wartości", y = "Liczebność") +
theme_minimal()
return(wykres)
}
set_seeds <- c(314, 159, 265, 358)
wszystkie_wykresy <- lapply(set_seeds, generuj_wykresy)
for (wykres in wszystkie_wykresy) {
print(wykres)
}
set.seed(3141592)
n1=10000
lambda1=50
k1=100
k2=500
k3=1000
k4=10000
probkag1 <- rgamma(n1, shape=k1, rate=lambda1)
probkag11 <- as_tibble(probkag1)
probkag2 <- rgamma(n1, shape=k2, rate=lambda1)
probkag22 <- as_tibble(probkag2)
probkag3 <- rgamma(n1, shape=k3, rate=lambda1)
probkag33 <- as_tibble(probkag3)
probkag4 <- rgamma(n1, shape=k4, rate=lambda1)
probkag44 <- as_tibble(probkag4)
probkan1 <- rnorm(n1, mean=k1/lambda1, sd=k1/lambda1**2)
probkan11 <- as_tibble(probkan1)
probkan2 <- rnorm(n1, mean=k2/lambda1, sd=k2/lambda1**2)
probkan22 <- as_tibble(probkan2)
probkan3 <- rnorm(n1, mean=k3/lambda1, sd=k3/lambda1**2)
probkan33 <- as_tibble(probkan3)
probkan4 <- rnorm(n1, mean=k4/lambda1, sd=k4/lambda1**2)
probkan44 <- as_tibble(probkan4)
wykresg1 <- ggplot(data=probkag11, aes(x=probkag1))+geom_histogram(fill="hotpink",bins=50)+labs(title="Rozkład Gamma dla k=100",x="Liczebność",y="Gęstość")
wykresn1 <-ggplot(data=probkan11, aes(x =probkan1))+geom_histogram(fill="green",bins=50)+labs(title="Rozkład normalny dla k=100", x="Liczebność",y="Gęstość")
ggarrange(wykresg1,wykresn1, nrow=1,ncol=2)
wykresg2 <- ggplot(data=probkag22, aes(x=probkag2))+geom_histogram(fill="hotpink",bins=50)+labs(title="Rozkład Gamma dla k=500",x="Liczebność",y="Gęstość")
wykresn2 <-ggplot(data=probkan22, aes(x =probkan2))+geom_histogram(fill="green",bins=50)+labs(title="Rozkład normalny dla k=500", x="Liczebność",y="Gęstość")
ggarrange(wykresg2,wykresn2, nrow=1,ncol=2)
wykresg3 <- ggplot(data=probkag33, aes(x=probkag3))+geom_histogram(fill="hotpink",bins=50)+labs(title="Rozkład Gamma dla k=1000",x="Liczebność",y="Gęstość")
wykresn3 <-ggplot(data=probkan33, aes(x =probkan3))+geom_histogram(fill="green",bins=50)+labs(title="Rozkład normalny dla k=1000", x="Liczebność",y="Gęstość")
ggarrange(wykresg3,wykresn3, nrow=1,ncol=2)
wykresg4 <- ggplot(data=probkag44, aes(x=probkag4))+geom_histogram(fill="hotpink",bins=50)+labs(title="Rozkład Gamma dla k=10000",x="Liczebność",y="Gęstość")
wykresn4 <-ggplot(data=probkan44, aes(x =probkan4))+geom_histogram(fill="green",bins=50)+labs(title="Rozkład normalny dla k=10000", x="Liczebność",y="Gęstość")
ggarrange(wykresg4,wykresn4, nrow=1,ncol=2)
wykresm1 <- ggplot(data=probkag11, aes(x=probkag1)) + geom_boxplot()+labs(x="próba z rozkładu Gamma dla k=100")
wykresr1 <- ggplot(data=probkan11, aes(x=probkan1)) + geom_boxplot()+labs(x="próba z rozkładu normalnego dla k=100")
wykresm2 <- ggplot(data=probkag22, aes(x=probkag2)) + geom_boxplot()+labs(x="próba z rozkładu Gamma dla k=500")
wykresr2 <- ggplot(data=probkan22, aes(x=probkan2)) + geom_boxplot()+labs(x="próba z rozkładu normalnego dla k=500")
wykresm3 <- ggplot(data=probkag33, aes(x=probkag3)) + geom_boxplot()+labs(x="próba z rozkładu Gamma dla k=1000")
wykresr3 <- ggplot(data=probkan33, aes(x=probkan3)) + geom_boxplot()+labs(x="próba z rozkładu normalnego dla k=1000")
wykresm4 <- ggplot(data=probkag44, aes(x=probkag4)) + geom_boxplot()+labs(x="próba z rozkładu Gamma dla k=10000")
wykresr4 <- ggplot(data=probkan44, aes(x=probkan4)) + geom_boxplot()+labs(x="próba z rozkładu normalnego dla k=10000")
ggarrange(wykresm1, wykresr1, ncol=1,nrow=2)
ggarrange(wykresm2, wykresr2, ncol=1,nrow=2)
ggarrange(wykresm3, wykresr3, ncol=1,nrow=2)
ggarrange(wykresm4, wykresr4, ncol=1,nrow=2)
library(tidyverse)
library(ggpubr)
library(tidyverse)
library(ggpubr)
telefony <- read_csv("zad2.csv")
telefony <- read_csv("zad2.csv")
telefony
ggplot(dane=telefony, aes(x = durability)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
ggplot(dane, aes(x = durability)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
ggplot(dane=telefony, aes(x = durability)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
ggplot(dane=telefony, aes(x)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
ggplot(dane=telefony, aes(x=durability)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
ggplot(dane=telefony$durability, aes(x=durability)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
ggplot(dane=telefony$durability, aes(x)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
telefony$durability <- as.numeric(gsub(",", ".", telefony$durability))
ggplot(dane=telefony$durability, aes(x)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
telefony$durability <- as.numeric(gsub(",", ".", telefony$durability))
ggplot(data = telefony, aes(x = durability)) +
geom_histogram(fill = "orange", bins = 20, color = "black", alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
telefony$durability <- as.numeric(gsub(",", ".", telefony$durability))
ggplot(data = telefony, aes(x = durability)) +
geom_histogram(fill = "orange", bins = 20, alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
telefony$durability <- as.numeric(gsub(",", ".", telefony$durability))
ggplot(data = telefony, aes(x = durability)) +
geom_histogram(fill = "orange", bins = 15, alpha = 0.7) +  # Histogram z pomarańczowymi słupkami
labs(title = "Histogram czasu pracy baterii", x = "Czas pracy baterii (godziny)", y = "Częstość") +
theme_minimal()
shapiro.test(telefony$durability)
acf(telefony$durability)
plot(telefony$number, telefony$durability)
n <- length(telefony$durability)
nden <- tibble(values = seq(-12,12,0.1)) %>% mutate(density = dt(values, n-1))
sr_bateria <- mean(telefony$durability)
Z_odchylenie <- sqrt((1/(n-1))*sum((telefony$durability-sr_bateria)^2))
m0 <- 48
T <- (sr_bateria - m0)/(Z_odchylenie/sqrt(n))
ggplot(data = nden, aes(x=values, y=density)) + geom_area(alpha = 0.3, color='blue') + geom_vline(xintercept=qt(0.025, n-1), linetype='dashed', color='red') + geom_vline(xintercept=qt(0.975, n-1), linetype='dashed', color='red') + geom_vline(xintercept=T, color='green') + ggtitle("Obszary decyzyjne dla testu t studenta")
paste("Kwantyl 0.025:", round(qt(0.025, df= (n-1)),2), "Kwantyl 0.975:", round(qt(0.975, df = (n-1)),2), "Nasza wartość z próby:", round(T,2))
T
t.test(telefony$durability, m=48)
czekolada <- read_csv("zad3t.csv")
czekolada
czekolada1 <- czekolada %>% pivot_wider(names_from = pack, values_from = sold, values_fn = list) %>% unnest(everything())
print(czekolada1)
length(czekolada1$new_pack)==length(czekolada1$old_pack)
shapiro.test(czekolada1$new_pack)
shapiro.test(czekolada1$old_pack)
shapiro.test(czekolada1$new_pack)
shapiro.test(czekolada1$old_pack)
cor(czekolada1$new_pack, czekolada1$old_pack)
mean_new <- mean(czekolada1$new_pack)
mean_old <- mean(czekolada1$old_pack)
n_new <- length(czekolada1$new_pack)
n_old <- length(czekolada1$old_pack)
var_new <- var(czekolada1$new_pack)
var_old <- var(czekolada1$old_pack)
alpha=0.05
t <- (mean_new - mean_old)/sqrt(var_new/n_new + var_old/n_old)
df <- (var_new/n_new + var_old/n_old)**2/(((var_new/n_new)**2)/(n_new-1)+((var_old/n_old)**2)/(n_old-1))
pvalue <- 1-pt(abs(t), df)
t
df
pvalue
library(tidyverse)
library(ggpubr)
telefony <- read_csv("zad2.csv")
telefony
shapiro.test(telefony$durability)
plot(telefony$number, telefony$durability)
n <- length(telefony$durability)
nden <- tibble(values = seq(-12,12,0.1)) %>% mutate(density = dt(values, n-1))
sr_bateria <- mean(telefony$durability)
Z_odchylenie <- sqrt((1/(n-1))*sum((telefony$durability-sr_bateria)^2))
m0 <- 48
T <- (sr_bateria - m0)/(Z_odchylenie/sqrt(n))
ggplot(data = nden, aes(x=values, y=density)) + geom_area(alpha = 0.3, color='blue') + geom_vline(xintercept=qt(0.025, n-1), linetype='dashed', color='red') + geom_vline(xintercept=qt(0.975, n-1), linetype='dashed', color='red') + geom_vline(xintercept=T, color='green') + ggtitle("Obszary decyzyjne dla testu t studenta")
paste("Kwantyl 0.025:", round(qt(0.025, df= (n-1)),2), "Kwantyl 0.975:", round(qt(0.975, df = (n-1)),2), "Nasza wartość z próby:", round(T,2))
T
t.test(telefony$durability, m=48)
czekolada <- read_csv("zad3t.csv")
czekolada
czekolada1 <- czekolada %>% pivot_wider(names_from = pack, values_from = sold, values_fn = list) %>% unnest(everything())
print(czekolada1)
length(czekolada1$new_pack)==length(czekolada1$old_pack)
shapiro.test(czekolada1$new_pack)
shapiro.test(czekolada1$old_pack)
cor(czekolada1$new_pack, czekolada1$old_pack)
mean_new <- mean(czekolada1$new_pack)
mean_old <- mean(czekolada1$old_pack)
n_new <- length(czekolada1$new_pack)
n_old <- length(czekolada1$old_pack)
var_new <- var(czekolada1$new_pack)
var_old <- var(czekolada1$old_pack)
alpha=0.05
t <- (mean_new - mean_old)/sqrt(var_new/n_new + var_old/n_old)
df <- (var_new/n_new + var_old/n_old)**2/(((var_new/n_new)**2)/(n_new-1)+((var_old/n_old)**2)/(n_old-1))
pvalue <- 1-pt(abs(t), df)
t
df
pvalue
t.test(czekolada1$new_pack, czekolada1$old_pack, alternative="greater")
library(tidyverse)
dane <- read_csv('sp3.csv')
dane
sample_cor <- cor(dane$Tweets, dane$Open)
sample_cor
dane1 <- dane %>% pivot_longer(cols = 1:2, names_to = 'Zmienna', values_to = 'Wartość')
ggplot(dane1, aes(x = Wartość)) +
geom_histogram(bins = 15, fill = 'hotpink') +
facet_wrap(~Zmienna, scales = 'free') +
labs(title = "Histogramy zmiennych", x = "Wartość", y = "Liczba wystąpień") +
theme_minimal()
shapiro.test(dane$Tweets)
shapiro.test(dane$Open)
library(tidyverse)
dane <- read_csv('sp3.csv')
dane
sample_cor <- cor(dane$Tweets, dane$Open)
sample_cor
dane1 <- dane %>% pivot_longer(cols = 1:2, names_to = 'Zmienna', values_to = 'Wartość')
ggplot(dane1, aes(x = Wartość)) +
geom_histogram(bins = 15, fill = 'hotpink') +
facet_wrap(~Zmienna, scales = 'free') +
labs(title = "Histogramy zmiennych", x = "Wartość", y = "Liczba wystąpień") +
theme_minimal()
shapiro.test(dane$Tweets)
shapiro.test(dane$Open)
cor.test(dane$Tweets, dane$Open)
set.seed(100)
bootstrap_samples <- 1000
boostrap <- numeric(bootstrap_samples)
for (i in 1:bootstrap_samples) {
new_samples <- sample(1:nrow(dane), replace = TRUE)
boostrap[i] <- cor(dane$Tweets[new_samples], dane$Open[new_samples])
}
bootstrap_quantile <- quantile(boostrap, c(0.025, 0.975))
bootstrap_quantile
ggplot(data=tibble(cor=boostrap), aes(x=cor)) + geom_histogram(bins=100) +
geom_vline(xintercept = bootstrap_quantile , color = "green", linewidth = 1.5) + geom_vline(xintercept = sample_cor, color = "blue", linewidth=1.25) +
labs(x = "Wartość współczynnika", y = "Liczba wystąpień", title = "Histogram próby bootstrapowej na współczynnik korelacji")
set.seed(100)
k <- 1000
n <- length(dane$Tweets)
perm <- rep(0,k)
for(i in 1:k){
perm[i] <- cor(dane$Tweets, sample(dane$Open, n, replace=FALSE))
}
perm_quantile <- quantile(perm, c(0.025,0.975))
perm_quantile
ggplot(data=tibble(cor=perm), aes(x=cor)) + geom_histogram(bins=20) +
geom_vline(xintercept = perm_quantile, color = "red", linewidth = 1.5) +
geom_vline(xintercept = sample_cor, color = "blue", linewidth = 1.25) +
labs(x = "Wartość współczynnika", y = "Liczba wystąpień", title = "Histogram próby permutacyjnej na współczynnik korelacji")
